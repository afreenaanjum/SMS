{"version":3,"sources":["reducers/session.js","reducers/video.js","store/configureStore.js","components/Duration.js","actions/video.js","components/VideoPlayer/videoPlayer.js","components/Chat/Chat.js","components/NavBar.js","App.js","index.js"],"names":["sessionReducer","state","action","type","initialState","url","playing","played","loaded","duration","playbackRate","videoPlayerReducer","payload","playBackRate","seeking","isHost","configureStore","createStore","combineReducers","startPage","startPageReducer","session","videoPlayer","pad","string","slice","Duration","className","seconds","dateTime","Math","round","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","getUTCSeconds","format","addUrl","playState","onprogress","VideoPlayer","playPause","currentState","props","socket","emit","dispatch","stop","onPlay","console","log","onPause","onSeekMouseDown","e","onSeekChange","parseFloat","target","value","onSeekMouseUp","player","seekTo","onProgress","onEnded","onDuration","durationTime","onClickFullscreen","screenfull","request","findDOMNode","ref","on","playStateServer","this","Card","style","border","backgroundColor","padding","width","height","onReady","onStart","onBuffer","onSeek","onError","CardFooter","Button","color","onClick","size","Row","margin","InputGroup","min","max","step","onMouseDown","onChange","onMouseUp","input","urlInput","placeholder","InputGroupAddon","addonType","toFixed","React","Component","connect","Chat","messages","message","handleChange","bind","handleSubmit","setState","preventDefault","paddingBottom","id","map","createdAt","socketId","text","Alert","onSubmit","Input","required","NavBar","toggle","isOpen","Navbar","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","DropdownMenu","right","DropdownItem","divider","io","App","Container","Col","sm","store","subscribe","getState","jsx","ReactDOM","render","document","getElementById"],"mappings":"oOAOeA,EAPQ,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAGnC,OAFAA,EAAOC,KAEAF,G,2jBCHnB,IAAMG,EAAe,CACjBC,IAAK,KACLC,SAAS,EACTC,OAAQ,EACRC,OAAQ,EACRC,SAAU,EACVC,aAAc,GA6BHC,EA1BY,WAAmC,IAAlCV,EAAiC,uDAAzBG,EAAcF,EAAW,uCACzD,OAAQA,EAAOC,MACX,IAAK,MACD,OAAO,EAAP,GAAYF,EAAZ,GAAsB,CAAEI,IAAKH,EAAOU,UACxC,IAAK,UACD,OAAO,EAAP,GAAYX,EAAZ,CAAmBK,QAASJ,EAAOU,UACvC,IAAK,SACD,OAAO,EAAP,GAAYX,EAAZ,CAAmBM,OAAQL,EAAOU,UACtC,IAAK,SACD,OAAO,EAAP,GAAYX,EAAZ,CAAmBO,OAAQN,EAAOU,UACtC,IAAK,WACD,OAAO,EAAP,GAAYX,EAAZ,CAAmBQ,SAAUP,EAAOU,UACxC,IAAK,gBACD,OAAO,EAAP,GAAYX,EAAZ,CAAmBY,aAAcX,EAAOU,UAC5C,IAAK,UACD,OAAO,EAAP,GAAYX,EAAZ,CAAmBa,QAASZ,EAAOU,UACvC,IAAK,aACD,OAAO,EAAP,GAAYX,EAAZ,GAAsBC,EAAOU,SACjC,IAAK,OACD,OAAO,EAAP,GAAYX,EAAZ,CAAmBc,OAAQb,EAAOU,UACtC,QACI,OAAOX,I,iBChBJe,EATQ,WAMnB,OALcC,YAAYC,YAAgB,CACtCC,UAAYC,IACZC,QAASrB,EACTsB,YAAaX,M,mGCYrB,SAASY,EAAIC,GACT,OAAQ,IAAMA,GAAQC,OAAO,GAGlBC,MAvBf,YAA2C,IAAvBC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,QAC3B,OACI,0BAAMC,SAAQ,WAAMC,KAAKC,MAAMH,GAAjB,KAA8BD,UAAWA,GAM/D,SAAgBC,GACZ,IAAMI,EAAO,IAAIC,KAAe,IAAVL,GAChBM,EAAKF,EAAKG,cACVC,EAAKJ,EAAKK,gBACVC,EAAKf,EAAIS,EAAKO,iBACpB,GAAIL,EACA,MAAM,GAAN,OAAUA,EAAV,YAAgBX,EAAIa,GAApB,YAA2BE,GAE/B,MAAM,GAAN,OAAUF,EAAV,YAAgBE,GAbPE,CAAOZ,KCLPa,EAAS,SAACpC,GACnB,MAAO,CACHF,KAAM,MACNS,QAASP,IAGJC,EAAU,SAACoC,GACpB,MAAO,CACHvC,KAAM,UACNS,QAAS8B,IAGJnC,EAAS,SAACA,GACnB,MAAO,CACHJ,KAAM,SACNS,QAASL,IASJE,EAAW,SAACA,GACrB,MAAO,CACHN,KAAM,WACNS,QAASH,IAUJK,EAAU,SAACA,GACpB,MAAO,CACHX,KAAM,UACNS,QAASE,IAIJ6B,EAAa,SAAC1C,GACvB,MAAO,CACHE,KAAM,aACNS,QAASX,I,8ECvBX2C,E,2MAyBFC,UAAY,WACR,IAAMC,GAAgB,EAAKC,MAAMzC,QAEjC0C,GAAOC,KAAK,YAAaH,GACzB,EAAKC,MAAMG,SAAS5C,EAAQwC,K,EAGhCK,KAAO,WACH,EAAKJ,MAAMG,SAAST,EAAO,OAC3B,EAAKM,MAAMG,SAAS5C,GAAQ,K,EAGhC8C,OAAS,WACLC,QAAQC,IAAI,UACZ,EAAKP,MAAMG,SAAS5C,GAAQ,K,EAGhCiD,QAAU,WACNF,QAAQC,IAAI,WACZ,EAAKP,MAAMG,SAAS5C,GAAQ,K,EAGhCkD,gBAAkB,SAAAC,GACd,EAAKV,MAAMG,SAASpC,GAAQ,K,EAGhC4C,aAAe,SAAAD,GACX,EAAKV,MAAMG,SAAS3C,EAAOoD,WAAWF,EAAEG,OAAOC,U,EAGnDC,cAAgB,SAAAL,GACZ,EAAKV,MAAMG,SAASpC,GAAQ,IAC5B,EAAKiD,OAAOC,OAAOL,WAAWF,EAAEG,OAAOC,S,EAG3CI,WAAa,SAAAhE,GACToD,QAAQC,IAAI,aAAcrD,GAGrB,EAAK8C,MAAMjC,SACZ,EAAKiC,MAAMG,SAASP,EAAW1C,IAG/B,EAAK8C,MAAMhC,QACXiC,GAAOC,KAAK,aAAchD,I,EAGlCiE,QAAU,WACNb,QAAQC,IAAI,WACZ,EAAKP,MAAMG,SAAS5C,GAAQ,K,EAGhC6D,WAAa,SAACC,GACVf,QAAQC,IAAI,aAAcc,GAC1B,EAAKrB,MAAMG,SAASzC,EAAS2D,K,EAGjCC,kBAAoB,WAChBC,IAAWC,QAAQC,sBAAY,EAAKT,U,EAGxCU,IAAM,SAAAV,GACF,EAAKA,OAASA,G,mFAtFG,IAAD,OAEhBf,GAAO0B,GAAG,YAAa,SAAChC,GACpB,EAAKK,MAAMG,SAAS5C,EAAQoC,MAGhCM,GAAO0B,GAAG,YAAa,SAACrE,GACpB,EAAK0C,MAAMG,SAAST,EAAOpC,MAI/B2C,GAAO0B,GAAG,gBAAiB,YAA+B,IAA5BrE,EAA2B,EAA3BA,IAAKsE,EAAsB,EAAtBA,gBAC/B,EAAK5B,MAAMG,SAAST,EAAOpC,IAC3B,EAAK0C,MAAMG,SAAS5C,EAAQqE,MAIhC3B,GAAO0B,GAAG,OAAQ,YAAsB,IAAnBnE,EAAkB,EAAlBA,OAAQF,EAAU,EAAVA,IACzB,EAAK0C,MAAMG,SAAST,EAAOpC,IAC3B,EAAK0D,OAAOC,OAAOzD,EAAQ,gB,6BAsE5BwC,GAAQ,IAAD,OAEV,OADAM,QAAQC,IAAI,eAAgBsB,KAAK7B,MAAM1C,KAEnC,yBAAKsB,UAAU,OACX,iCACI,kBAACkD,EAAA,EAAD,CAAMC,MAAO,CAAEC,OAAQ,OAAQC,gBAAiB,UAAWC,QAAS,SAChE,yBAAKtD,UAAU,kBACX,kBAAC,IAAD,CACI8C,IAAKG,KAAKH,IACV9C,UAAU,eACVuD,MAAM,OACNC,OAAO,OACP9E,IAAKuE,KAAK7B,MAAM1C,IAChBC,QAASsE,KAAK7B,MAAMzC,QAEpB8E,QAAS,kBAAM/B,QAAQC,IAAI,YAC3B+B,QAAS,kBAAMhC,QAAQC,IAAI,YAC3BF,OAAQwB,KAAKxB,OACbG,QAASqB,KAAKrB,QACd+B,SAAU,kBAAMjC,QAAQC,IAAI,aAC5BiC,OAAQ,SAAA9B,GAAC,OAAIJ,QAAQC,IAAI,SAAUG,IACnCS,QAASU,KAAKV,QACdsB,QAAS,SAAA/B,GAAC,OAAIJ,QAAQC,IAAI,UAAWG,IACrCQ,WAAYW,KAAKX,WACjBE,WAAYS,KAAKT,cAGzB,kBAACsB,EAAA,EAAD,CAAYX,MAAO,CAAEC,OAAQ,SACzB,kBAACW,EAAA,EAAD,CAAQC,MAAM,OAAOC,QAAShB,KAAKzB,MAAM,kBAAC,IAAD,CAAQwC,MAAM,QAAQE,KAAK,SAAkB,IACtF,kBAACH,EAAA,EAAD,CAAQC,MAAM,OAAOC,QAAShB,KAAK/B,WAAY+B,KAAK7B,MAAMzC,QAAU,kBAAC,IAAD,CAASqF,MAAM,QAAQE,KAAK,QAAW,kBAAC,IAAD,CAAQF,MAAM,QAAQE,KAAK,SAAmB,IACzJ,kBAACH,EAAA,EAAD,CAAQC,MAAM,OACVC,QAAS,WACL,EAAK7B,OAAOC,OAAO,EAAKjB,MAAMxC,OAAQ,cACvC,kBAAC,IAAD,CAAWoF,MAAM,QAAQE,KAAK,SAErC,kBAACH,EAAA,EAAD,CAAQC,MAAM,OACVC,QAAShB,KAAKP,mBAAmB,kBAAC,IAAD,CAAcsB,MAAM,QAAQE,KAAK,aAI9E,kBAACC,EAAA,EAAD,CAAKhB,MAAO,CAAEiB,OAAQ,SACtB,kBAACC,EAAA,EAAD,KACI,2BACIrE,UAAU,kBACVxB,KAAK,QAAQ8F,IAAK,EAAGC,IAAK,EAAGC,KAAK,MAClCtC,MAAOe,KAAK7B,MAAMxC,OAClB6F,YAAaxB,KAAKpB,gBAClB6C,SAAUzB,KAAKlB,aACf4C,UAAW1B,KAAKd,iBAGxB,kBAACkC,EAAA,EAAD,KACI,2BAAOvB,IAAK,SAAA8B,GAAW,EAAKC,SAAWD,GAASpG,KAAK,OAAOsG,YAAY,cACxE,kBAACC,EAAA,EAAD,CAAiBC,UAAU,UACvB,kBAACjB,EAAA,EAAD,CAAQE,QACH,WAEG5C,GAAOC,KAAK,MAAO,EAAKuD,SAAS3C,OACjC,EAAKd,MAAMG,SAAST,EAAO,EAAK+D,SAAS3C,UAJjD,QAOA,kBAAC6B,EAAA,EAAD,CAAQE,QAAS,WACb,EAAK7C,MAAMG,SD5HhC,CACH/C,KAAM,OACNS,SC0HiD,MAD7B,UAOR,kBAACiE,EAAA,EAAD,CAAMC,MAAO,CAAEiB,OAAQ,OAAQd,QAAS,SACpC,qCACA,+BAAO,+BACH,4BACI,mCACA,wBAAItD,UAAYiD,KAAK7B,MAAM1C,IAAgB,GAAV,SAC5BuE,KAAK7B,MAAM1C,KAAO,SAG3B,4BACI,uCACA,4BAAKuE,KAAK7B,MAAMzC,QAAU,OAAS,UAEvC,4BACI,sCACA,4BAAKsE,KAAK7B,MAAMxC,OAAOqG,QAAQ,KAEnC,4BACI,sCACA,4BAAKhC,KAAK7B,MAAMvC,OAAOoG,QAAQ,KAEnC,4BACI,wCACA,4BAAI,kBAAC,EAAD,CAAUhF,QAASgD,KAAK7B,MAAMtC,aAEtC,4BACI,uCACA,4BAAI,kBAAC,EAAD,CAAUmB,QAASgD,KAAK7B,MAAMtC,SAAWmE,KAAK7B,MAAMxC,WAE5D,4BACI,yCACA,4BAAI,kBAAC,EAAD,CAAUqB,QAASgD,KAAK7B,MAAMtC,UAAY,EAAImE,KAAK7B,MAAMxC,qB,GA7LnEsG,IAAMC,WAuNjBC,cAfS,SAAC9G,GAErB,OADAoD,QAAQC,IAAI,kBAAmBrD,GACxB,CACHI,IAAKJ,EAAMqB,YAAYjB,IACvBC,QAASL,EAAMqB,YAAYhB,QAC3BC,OAAQN,EAAMqB,YAAYf,OAC1BC,OAAQP,EAAMqB,YAAYd,OAC1BC,SAAUR,EAAMqB,YAAYb,SAC5BK,QAASb,EAAMqB,YAAYR,QAC3BC,OAAQd,EAAMqB,YAAYP,SAMnBgG,CAAyBnE,G,0CCvJzBoE,E,YA1EX,aAAc,IAAD,8BACT,+CACK/G,MAAM,CACPgH,SAAS,GACTC,QAAQ,IAEZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPX,E,iFAUO,IAAD,OACfpE,GAAO0B,GAAG,UAAW,SAACwC,GAClB,EAAKI,SAAS,CAACL,SAAS,GAAD,mBAAM,EAAKhH,MAAMgH,UAAjB,CAA2BC,U,mCAI7CzD,GACTA,EAAE8D,iBACFvE,GAAOC,KAAK,UAAW2B,KAAK3E,MAAMiH,SAClCtC,KAAK0C,SAAS,CAACJ,QAAQ,O,mCAGdzD,GACT,IAAMyD,EAAUzD,EAAEG,OAAOC,MACzBe,KAAK0C,SAAS,CAACJ,c,+BAKf,OADA7D,QAAQC,IAAIsB,KAAK3E,OAEb,6BACI,kBAAC4E,EAAA,EAAD,CAAMC,MAAO,CAAC0C,cAAc,OAAQzC,OAAO,OAAQC,gBAAgB,YAC/D,yBAAKrD,UAAU,SAAS8F,GAAG,WACvB,yBAAK9F,UAAU,iBACdiD,KAAK3E,MAAMgH,SAASS,IAAK,SAAAR,GACtB,OAASA,EAAQS,UACP3E,GAAOyE,KAAOP,EAAQU,SACnB,kBAAC/C,EAAA,EAAD,CAAM4C,GAAK,kBACR,uBAAG9F,UAAU,gBAAgBuF,EAAQW,MACrC,uBAAGlG,UAAU,YAAb,UAA4BuF,EAAQS,UAApC,wBAA6DT,EAAQU,YAGxE,kBAAC/C,EAAA,EAAD,CAAM4C,GAAG,eACN,uBAAG9F,UAAU,gBAAgBuF,EAAQW,MACrC,uBAAGlG,UAAU,YAAb,UAA4BuF,EAAQS,UAApC,wBAA6DT,EAAQU,YAG7E,kBAACE,EAAA,EAAD,CAAOnC,MAAM,OAAO8B,GAAI,SACpB,2BAAIP,EAAQW,YAOpC,0BAAME,SAAUnD,KAAKyC,cACjB,kBAACrB,EAAA,EAAD,KACI,kBAACgC,EAAA,EAAD,CACI7H,KAAK,OACL0D,MAAOe,KAAK3E,MAAMiH,QAClBb,SAAUzB,KAAKuC,aACfV,YAAa,iBACbwB,UAAQ,IAEZ,kBAACvB,EAAA,EAAD,CAAiBC,UAAU,UACvB,kBAACjB,EAAA,EAAD,KAAQ,kBAAC,IAAD,CAAcG,KAAK,iB,GAlEpCiB,a,8GCGEoB,G,YACnB,WAAYnF,GAAQ,IAAD,8BACjB,4CAAMA,KAEDoF,OAAS,EAAKA,OAAOf,KAAZ,gBACd,EAAKnH,MAAQ,CACXmI,QAAQ,GALO,E,sEASjBxD,KAAK0C,SAAS,CACZc,QAASxD,KAAK3E,MAAMmI,W,+BAItB,OACE,6BACE,kBAACC,GAAA,EAAD,CAAQvD,MAAO,CAACE,gBAAiB,WAAYsD,OAAK,EAACC,OAAO,MACxD,kBAACC,GAAA,EAAD,CAAcC,KAAK,IAAI3D,MAAO,CAACa,MAAM,UAArC,QACA,kBAAC+C,GAAA,EAAD,CAAe9C,QAAShB,KAAKuD,SAC7B,kBAACQ,GAAA,EAAD,CAAUP,OAAQxD,KAAK3E,MAAMmI,OAAQQ,QAAM,GACzC,kBAACC,GAAA,EAAD,CAAKlH,UAAU,UAAUiH,QAAM,GAC7B,kBAACE,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAASN,KAAK,eAAe3D,MAAO,CAACa,MAAM,UAA3C,aAEF,kBAACqD,GAAA,EAAD,CAAsBC,KAAG,EAACC,UAAQ,GAChC,kBAACC,GAAA,EAAD,CAAgBF,KAAG,GACf,kBAAC,IAAD,CAAcpD,KAAK,SAASF,MAAM,aAEtC,kBAACyD,GAAA,EAAD,CAAcC,OAAK,GACjB,kBAACC,GAAA,EAAD,gBAGA,kBAACA,GAAA,EAAD,gBAGA,kBAACA,GAAA,EAAD,CAAcC,SAAO,IACrB,kBAACD,GAAA,EAAD,2B,GArCkBzC,IAAMC,W,oBCApC9D,GAASwG,MAEf,SAASC,GAAI1G,GACX,OACE,kBAAC,IAAD,KACE,yBAAKpB,UAAU,OACb,kBAAC,GAAD,MACA,kBAAC+H,GAAA,EAAD,KACE,kBAAC5D,EAAA,EAAD,CAAKhB,MAAO,CAAEiB,OAAQ,UACtB,kBAACD,EAAA,EAAD,KACE,kBAAC6D,GAAA,EAAD,CAAKC,GAAG,KACN,kBAAC,EAAD,OAEF,kBAACD,GAAA,EAAD,CAAKC,GAAG,KACN,kBAAC,EAAD,WAcd7C,YALwB,SAAC9G,GACvB,MAAO,CACLc,OAAQd,EAAMqB,YAAYP,SAG9BgG,CAAyB0C,I,WClCnBI,GAAQ7I,IAGd6I,GAAMC,UAAU,WACZzG,QAAQC,IAAIuG,GAAME,cAGtB1G,QAAQC,IAAIuG,GAAME,YAElB,IAAMC,GACF,kBAAC,IAAD,CAAUH,MAAOA,IACb,kBAAC,eAAD,KACI,kBAACJ,GAAD,QAIZQ,IAASC,OAAOF,GAAKG,SAASC,eAAe,U","file":"static/js/main.33a35487.chunk.js","sourcesContent":["const sessionReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default sessionReducer","const initialState = {\r\n    url: null,\r\n    playing: true,\r\n    played: 0,\r\n    loaded: 0,\r\n    duration: 0,\r\n    playbackRate: 1.0\r\n}\r\n\r\nconst videoPlayerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"URL\":\r\n            return { ...state, ...{ url: action.payload } }\r\n        case \"PLAYING\":\r\n            return { ...state, playing: action.payload }\r\n        case \"PLAYED\":\r\n            return { ...state, played: action.payload }\r\n        case \"LOADED\":\r\n            return { ...state, loaded: action.payload }\r\n        case \"DURATION\":\r\n            return { ...state, duration: action.payload }\r\n        case \"PLAYBACKARATE\":\r\n            return { ...state, playBackRate: action.payload }\r\n        case \"SEEKING\":\r\n            return { ...state, seeking: action.payload }\r\n        case \"ONPROGRESS\":\r\n            return { ...state, ...action.payload }\r\n        case \"HOST\":\r\n            return { ...state, isHost: action.payload }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default videoPlayerReducer","import { createStore, combineReducers } from 'redux'\r\nimport sessionReducer from '../reducers/session'\r\nimport videoPlayerReducer from '../reducers/video'\r\nimport startPageReducer from '../reducers/startpage'\r\n\r\nconst configureStore = () => {\r\n    const store = createStore(combineReducers({\r\n        startPage : startPageReducer,\r\n        session: sessionReducer,\r\n        videoPlayer: videoPlayerReducer\r\n    }))\r\n    return store\r\n}\r\n\r\nexport default configureStore\r\n","import React from 'react'\r\n\r\nfunction Duration({ className, seconds }) {\r\n    return (\r\n        <time dateTime={`P${Math.round(seconds)}S`} className={className}>\r\n            {format(seconds)}\r\n        </time>\r\n    )\r\n}\r\n\r\nfunction format(seconds) {\r\n    const date = new Date(seconds * 1000)\r\n    const hh = date.getUTCHours()\r\n    const mm = date.getUTCMinutes()\r\n    const ss = pad(date.getUTCSeconds())\r\n    if (hh) {\r\n        return `${hh}:${pad(mm)}:${ss}`\r\n    }\r\n    return `${mm}:${ss}`\r\n}\r\n\r\nfunction pad(string) {\r\n    return ('0' + string).slice(-2)\r\n}\r\n\r\nexport default Duration","export const addUrl = (url) => {\r\n    return {\r\n        type: \"URL\",\r\n        payload: url\r\n    }\r\n}\r\nexport const playing = (playState) => {\r\n    return {\r\n        type: \"PLAYING\",\r\n        payload: playState\r\n    }\r\n}\r\nexport const played = (played) => {\r\n    return {\r\n        type: \"PLAYED\",\r\n        payload: played\r\n    }\r\n}\r\nexport const loaded = (loaded) => {\r\n    return {\r\n        type: \"LOADED\",\r\n        payload: loaded\r\n    }\r\n}\r\nexport const duration = (duration) => {\r\n    return {\r\n        type: \"DURATION\",\r\n        payload: duration\r\n    }\r\n}\r\nexport const playBackRate = (playBackRate) => {\r\n    return {\r\n        type: \"PLAYBACKRATE\",\r\n        payload: playBackRate\r\n    }\r\n}\r\n\r\nexport const seeking = (seeking) => {\r\n    return {\r\n        type: \"SEEKING\",\r\n        payload: seeking\r\n    }\r\n}\r\n\r\nexport const onprogress = (state) => {\r\n    return {\r\n        type: 'ONPROGRESS',\r\n        payload: state\r\n    }\r\n}\r\n\r\nexport const host = (isHost) => {\r\n    return {\r\n        type: 'HOST',\r\n        payload: isHost\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { findDOMNode } from 'react-dom'\r\nimport screenfull from 'screenfull'\r\nimport { socket } from '../../App'\r\nimport ReactPlayer from 'react-player'\r\nimport Duration from '../Duration'\r\nimport { connect } from 'react-redux';\r\nimport { playing, addUrl, played, duration, seeking, onprogress, host } from '../../actions/video'\r\n\r\n//Icons\r\nimport { FaPlay, FaStop, FaPause, FaSyncAlt } from \"react-icons/fa\";\r\nimport { MdFullscreen } from \"react-icons/md\";\r\n\r\n//Styles \r\nimport './videoPlayer.css'\r\nimport {\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    Row,\r\n    Button,\r\n    Card,\r\n    CardFooter\r\n} from 'reactstrap';\r\n\r\nclass VideoPlayer extends React.Component {\r\n    componentDidMount() {\r\n        //Listening to the new playing state\r\n        socket.on('playState', (playState) => {\r\n            this.props.dispatch(playing(playState))\r\n        })\r\n        //When someone enters custom url and loads it, same URL is listened by all\r\n        socket.on('updateURL', (url) => {\r\n            this.props.dispatch(addUrl(url))\r\n        })\r\n\r\n        // When a new user joins to an existing session the URL is fetched by listening to the socket\r\n        socket.on('newConnection', ({ url, playStateServer }) => {\r\n            this.props.dispatch(addUrl(url))\r\n            this.props.dispatch(playing(playStateServer))\r\n        })\r\n\r\n        //Keeps in sync with host\r\n        socket.on('sync', ({ played, url }) => {\r\n            this.props.dispatch(addUrl(url))\r\n            this.player.seekTo(played, 'fraction')\r\n        })\r\n    }\r\n\r\n\r\n    playPause = () => {\r\n        const currentState = !this.props.playing\r\n        // If a user in the session is clicking on the playPause button the state is emitted to the server\r\n        socket.emit('playPause', currentState)\r\n        this.props.dispatch(playing(currentState))\r\n    }\r\n\r\n    stop = () => {\r\n        this.props.dispatch(addUrl(null))\r\n        this.props.dispatch(playing(false))\r\n    }\r\n\r\n    onPlay = () => {\r\n        console.log('onPlay')\r\n        this.props.dispatch(playing(true))\r\n    }\r\n\r\n    onPause = () => {\r\n        console.log('onPause')\r\n        this.props.dispatch(playing(false))\r\n    }\r\n\r\n    onSeekMouseDown = e => {\r\n        this.props.dispatch(seeking(true))\r\n    }\r\n\r\n    onSeekChange = e => {\r\n        this.props.dispatch(played(parseFloat(e.target.value)))\r\n    }\r\n\r\n    onSeekMouseUp = e => {\r\n        this.props.dispatch(seeking(false))\r\n        this.player.seekTo(parseFloat(e.target.value))\r\n    }\r\n\r\n    onProgress = state => {\r\n        console.log('onProgress', state)\r\n\r\n        // We only want to update time slider if we are not currently seeking\r\n        if (!this.props.seeking) {\r\n            this.props.dispatch(onprogress(state))\r\n        }\r\n\r\n        if (this.props.isHost) {\r\n            socket.emit('onProgress', state)\r\n        }\r\n    }\r\n    onEnded = () => {\r\n        console.log('onEnded')\r\n        this.props.dispatch(playing(false))\r\n    }\r\n\r\n    onDuration = (durationTime) => {\r\n        console.log('onDuration', durationTime)\r\n        this.props.dispatch(duration(durationTime))\r\n    }\r\n\r\n    onClickFullscreen = () => {\r\n        screenfull.request(findDOMNode(this.player))\r\n    }\r\n\r\n    ref = player => {\r\n        this.player = player\r\n    }\r\n\r\n    render(props) {\r\n        console.log('video render', this.props.url)\r\n        return (\r\n            <div className='app'>\r\n                <section>\r\n                    <Card style={{ border: \"none\", backgroundColor: \"#ebf1f4\", padding: \"null\" }}>\r\n                        <div className='player-wrapper'>\r\n                            <ReactPlayer\r\n                                ref={this.ref}\r\n                                className='react-player'\r\n                                width=\"100%\"\r\n                                height=\"100%\"\r\n                                url={this.props.url}\r\n                                playing={this.props.playing}\r\n                                // playbackRate={this.props.playbackRate}\r\n                                onReady={() => console.log('onReady')}\r\n                                onStart={() => console.log('onStart')}\r\n                                onPlay={this.onPlay}\r\n                                onPause={this.onPause}\r\n                                onBuffer={() => console.log('onBuffer')}\r\n                                onSeek={e => console.log('onSeek', e)}\r\n                                onEnded={this.onEnded}\r\n                                onError={e => console.log('onError', e)}\r\n                                onProgress={this.onProgress}\r\n                                onDuration={this.onDuration}\r\n                            />\r\n                        </div>\r\n                        <CardFooter style={{ border: \"none\" }}>\r\n                            <Button color=\"none\" onClick={this.stop}><FaStop color=\"white\" size=\"1em\" /></Button>{' '}\r\n                            <Button color=\"none\" onClick={this.playPause}>{this.props.playing ? <FaPause color=\"white\" size=\"1em\" /> : <FaPlay color=\"white\" size=\"1em\" />}</Button>{' '}\r\n                            <Button color=\"none\"\r\n                                onClick={() => {\r\n                                    this.player.seekTo(this.props.played, \"fraction\")\r\n                                }}><FaSyncAlt color=\"white\" size=\"1em\" />\r\n                            </Button>\r\n                            <Button color=\"none\"\r\n                                onClick={this.onClickFullscreen}><MdFullscreen color=\"white\" size=\"1.5em\" />\r\n                            </Button>\r\n                        </CardFooter>\r\n                    </Card>\r\n                    <Row style={{ margin: \"5px\" }} />\r\n                    <InputGroup>\r\n                        <input\r\n                            className=\"player-progress\"\r\n                            type='range' min={0} max={1} step='any'\r\n                            value={this.props.played}\r\n                            onMouseDown={this.onSeekMouseDown}\r\n                            onChange={this.onSeekChange}\r\n                            onMouseUp={this.onSeekMouseUp}\r\n                        />\r\n                    </InputGroup>\r\n                    <InputGroup>\r\n                        <input ref={input => { this.urlInput = input }} type='text' placeholder='Enter URL' />\r\n                        <InputGroupAddon addonType=\"append\">\r\n                            <Button onClick=\r\n                                {() => {\r\n                                    //Emitting the URL entered to the server\r\n                                    socket.emit('url', this.urlInput.value)\r\n                                    this.props.dispatch(addUrl(this.urlInput.value))\r\n                                }}>Load\r\n                            </Button>\r\n                            <Button onClick={() => {\r\n                                this.props.dispatch(host(true))\r\n                            }}>Host\r\n                            </Button>\r\n                        </InputGroupAddon>\r\n                    </InputGroup>\r\n\r\n                    <Card style={{ margin: \"50px\", padding: \"10px\" }}>\r\n                        <h2>State</h2>\r\n                        <table><tbody>\r\n                            <tr>\r\n                                <th>url</th>\r\n                                <td className={!this.props.url ? 'faded' : ''}>\r\n                                    {this.props.url || 'null'}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>playing</th>\r\n                                <td>{this.props.playing ? 'true' : 'false'}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>played</th>\r\n                                <td>{this.props.played.toFixed(3)}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>loaded</th>\r\n                                <td>{this.props.loaded.toFixed(3)}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>duration</th>\r\n                                <td><Duration seconds={this.props.duration} /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>elapsed</th>\r\n                                <td><Duration seconds={this.props.duration * this.props.played} /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>remaining</th>\r\n                                <td><Duration seconds={this.props.duration * (1 - this.props.played)} /></td>\r\n                            </tr>\r\n                        </tbody></table>\r\n                    </Card>\r\n                </section>\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log('mapStateToProps', state)\r\n    return {\r\n        url: state.videoPlayer.url,\r\n        playing: state.videoPlayer.playing,\r\n        played: state.videoPlayer.played,\r\n        loaded: state.videoPlayer.loaded,\r\n        duration: state.videoPlayer.duration,\r\n        seeking: state.videoPlayer.seeking,\r\n        isHost: state.videoPlayer.isHost,\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(VideoPlayer)","import React, {Component} from 'react'\r\nimport { socket } from '../../App'\r\nimport './Chat.css' \r\nimport { FaPaperPlane } from \"react-icons/fa\";\r\n\r\nimport {\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    Input,\r\n    Button,\r\n    Card,\r\n    Alert\r\n} from 'reactstrap';\r\nclass Chat extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            messages:[],\r\n            message:\"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        socket.on(\"message\", (message) => {\r\n            this.setState({messages: [...this.state.messages, message]})\r\n        })\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault()\r\n        socket.emit(\"message\", this.state.message)\r\n        this.setState({message:\"\"})\r\n    }\r\n\r\n    handleChange(e){\r\n        const message = e.target.value\r\n        this.setState({message})\r\n    }\r\n\r\n    render(){\r\n        console.log(this.state)\r\n        return(\r\n            <div>\r\n                <Card style={{paddingBottom:\"15px\", border:\"none\", backgroundColor:\"#f5f5f5\"}}>\r\n                    <div className=\"scroll\" id=\"style-1\">\r\n                        <div className=\"message-align\">\r\n                        {this.state.messages.map( message => {\r\n                            return( (message.createdAt)?\r\n                                    ((socket.id !== message.socketId) ?   \r\n                                        (<Card id = 'group_messages'>\r\n                                            <p className=\"message-text\">{message.text}</p>\r\n                                            <p className=\"msg_time\">{`${message.createdAt} | Username: ${message.socketId}`}</p>\r\n                                        </Card>)\r\n                                        :\r\n                                        (<Card id='my_messages'>\r\n                                            <p className=\"message-text\">{message.text}</p>\r\n                                            <p className=\"msg_time\">{`${message.createdAt} | Username: ${message.socketId}`}</p>\r\n                                        </Card>)\r\n                                    ):(\r\n                                    <Alert color=\"dark\" id ='alert'>\r\n                                        <p>{message.text}</p>\r\n                                    </Alert>))\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <InputGroup>\r\n                        <Input\r\n                            type=\"text\"\r\n                            value={this.state.message}\r\n                            onChange={this.handleChange}\r\n                            placeholder={\"Type message..\"} \r\n                            required\r\n                        />\r\n                        <InputGroupAddon addonType=\"append\">\r\n                            <Button><FaPaperPlane size=\"1em\" /></Button>\r\n                        </InputGroupAddon>\r\n                    </InputGroup>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat;","import React from 'react';\r\nimport { FaUserCircle } from \"react-icons/fa\";\r\n\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem } from 'reactstrap';\r\n\r\nexport default class NavBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar style={{backgroundColor: '#003a8c'}} light expand=\"md\">\r\n          <NavbarBrand  href=\"/\" style={{color:\"white\"}}>SMS.</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink href=\"/components/\" style={{color:\"white\"}}>UserName</NavLink>\r\n              </NavItem>\r\n              <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav >\r\n                    <FaUserCircle size=\"1.80em\" color=\"#C9D4F8\"/>\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem>\r\n                    Profile\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    History\r\n                  </DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem>\r\n                    Sign out\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport io from 'socket.io-client'\r\nimport { connect } from 'react-redux';\r\n\r\n//App components\r\nimport VideoPlayer from './components/VideoPlayer/videoPlayer'\r\nimport Chat from './components/Chat/Chat'\r\n\r\n//Style components\r\nimport NavBar from './components/NavBar'\r\nimport { Container, Row, Col } from 'reactstrap'\r\n\r\n// let port = process.env.PORT || 3005\r\n\r\n//Setting up sockets on client side\r\nconst socket = io()\r\n\r\nfunction App(props) {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className='app'>\r\n        <NavBar />\r\n        <Container>\r\n          <Row style={{ margin: \"15px\" }} />\r\n          <Row>\r\n            <Col sm=\"8\" >\r\n              <VideoPlayer />\r\n            </Col>\r\n            <Col sm=\"4\" >\r\n              <Chat />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div >\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isHost: state.videoPlayer.isHost\r\n  }\r\n}\r\nconnect(mapStateToProps)(App)\r\n\r\nexport { App, socket }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { AppContainer } from 'react-hot-loader'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './store/configureStore'\r\nimport { App } from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n//Creating redux store\r\nconst store = configureStore()\r\n\r\n//Subscribe method gets called only when there are changes made.\r\nstore.subscribe(() => {\r\n    console.log(store.getState())\r\n})\r\n\r\nconsole.log(store.getState())\r\n\r\nconst jsx = (\r\n    <Provider store={store}>\r\n        <AppContainer>\r\n            <App />\r\n        </AppContainer>\r\n    </Provider>\r\n)\r\nReactDOM.render(jsx, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}